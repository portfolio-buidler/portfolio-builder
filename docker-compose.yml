# version: "3.9"

services:
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrate:
    build: ./backend
    restart: "no"
    env_file: .env
    environment:
      DATABASE_URL: ${DATABASE_URL}        
    entrypoint: ["/app/docker/migrate.sh"]
    volumes:
      - ./backend/app:/app/app
      - ./backend/alembic:/app/alembic
      - ./backend/alembic.ini:/app/alembic.ini
      - ./backend/docker/migrate.sh:/app/docker/migrate.sh
    depends_on:
      db:
        condition: service_healthy

  backend:
    build: ./backend
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_URL: ${DATABASE_URL}
      BACKEND_PORT: ${BACKEND_PORT}
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    command: >
      sh -c "uvicorn app.main:app --host 0.0.0.0 --port ${BACKEND_PORT:-9000} --reload"
    volumes:
      - ./backend/app:/app/app
      - ./backend/alembic:/app/alembic
      - ./backend/alembic.ini:/app/alembic.ini
    ports:
      - "${BACKEND_PORT:-9000}:${BACKEND_PORT:-9000}"

  frontend:
    build: ./frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "${FRONTEND_PORT:-3000}:80"

volumes:
  pgdata:
