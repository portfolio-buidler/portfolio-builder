version: "3.9"

services:
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    restart: unless-stopped
    env_file: .env
    environment:
      # Compose injects this into the container; your FastAPI reads os.getenv("DATABASE_URL")
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${BACKEND_PORT:-8000}:8000"

  frontend:
    build: ./frontend
    restart: unless-stopped
    depends_on:
      - backend
    # nginx inside the image listens on 80; we map it to FRONTEND_PORT on the host
    ports:
      - "${FRONTEND_PORT:-3000}:80"

volumes:
  pgdata:
